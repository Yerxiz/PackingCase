from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QInputDialog, QApplication, QAction
from PyQt5.QtGui import QPixmap


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1420, 800)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout.setContentsMargins(5, 5, 5, 5)
        self.gridLayout.setHorizontalSpacing(15)
        self.gridLayout.setVerticalSpacing(10)
        self.gridLayout.setObjectName("gridLayout")
        self.openListButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.openListButton.sizePolicy().hasHeightForWidth())
        self.openListButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.openListButton.setFont(font)
        self.openListButton.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                          "border-radius: 8px;")
        self.openListButton.setObjectName("openListButton")
        self.gridLayout.addWidget(self.openListButton, 12, 1, 1, 1)
        self.listRemoveEl = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listRemoveEl.sizePolicy().hasHeightForWidth())
        self.listRemoveEl.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.listRemoveEl.setFont(font)
        self.listRemoveEl.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                        "border-radius: 8px;")
        self.listRemoveEl.setObjectName("listRemoveEl")
        self.gridLayout.addWidget(self.listRemoveEl, 12, 2, 1, 1)
        self.listSaveButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listSaveButton.sizePolicy().hasHeightForWidth())
        self.listSaveButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.listSaveButton.setFont(font)
        self.listSaveButton.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                          "border-radius: 8px;")
        self.listSaveButton.setObjectName("listSaveButton")
        self.gridLayout.addWidget(self.listSaveButton, 12, 0, 1, 1)
        self.caseLengthInput = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.caseLengthInput.sizePolicy().hasHeightForWidth())
        self.caseLengthInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.caseLengthInput.setFont(font)
        self.caseLengthInput.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                           "border-radius: 8px;")
        self.caseLengthInput.setObjectName("caseLengthInput")
        self.gridLayout.addWidget(self.caseLengthInput, 2, 3, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem, 2, 2, 1, 1)
        self.itemFragilityCheck = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemFragilityCheck.sizePolicy().hasHeightForWidth())
        self.itemFragilityCheck.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.itemFragilityCheck.setFont(font)
        self.itemFragilityCheck.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                              " border-radius: 8px;")
        self.itemFragilityCheck.setObjectName("itemFragilityCheck")
        self.gridLayout.addWidget(self.itemFragilityCheck, 7, 6, 1, 1)
        self.label_caseMaxWeight = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.label_caseMaxWeight.setFont(font)
        self.label_caseMaxWeight.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                          "border-radius: 8px;")
        self.label_caseMaxWeight.setObjectName("label_caseMaxWeight")
        self.gridLayout.addWidget(self.label_caseMaxWeight, 2, 6, 1, 1)
        self.caseWidthInput = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.caseWidthInput.sizePolicy().hasHeightForWidth())
        self.caseWidthInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.caseWidthInput.setFont(font)
        self.caseWidthInput.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                          "border-radius: 8px;")
        self.caseWidthInput.setObjectName("caseWidthInput")
        self.gridLayout.addWidget(self.caseWidthInput, 2, 4, 1, 1)
        self.caseHeigthInput = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.caseHeigthInput.sizePolicy().hasHeightForWidth())
        self.caseHeigthInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.caseHeigthInput.setFont(font)
        self.caseHeigthInput.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                           "border-radius: 8px;")
        self.caseHeigthInput.setObjectName("caseHeigthInput")
        self.gridLayout.addWidget(self.caseHeigthInput, 2, 5, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 160, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem1, 10, 3, 1, 1)
        self.statusBarVolume = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.statusBarVolume.setFont(font)
        self.statusBarVolume.setStyleSheet("background-color: rgba(243, 243, 243, 200); border-radius: 5px;")
        self.statusBarVolume.setAlignment(QtCore.Qt.AlignCenter)
        self.statusBarVolume.setObjectName("statusBarVolume")
        self.gridLayout.addWidget(self.statusBarVolume, 11, 6, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(120, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 7, 1, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem3, 7, 0, 1, 1)
        self.statusBarWeight = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.statusBarWeight.setFont(font)
        self.statusBarWeight.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                           "border-radius: 8px;")
        self.statusBarWeight.setAlignment(QtCore.Qt.AlignCenter)
        self.statusBarWeight.setObjectName("statusBarWeight")
        self.gridLayout.addWidget(self.statusBarWeight, 11, 5, 1, 1)
        self.listNameInput = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listNameInput.sizePolicy().hasHeightForWidth())
        self.listNameInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.listNameInput.setFont(font)
        self.listNameInput.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                         "border-radius: 8px;")
        self.listNameInput.setObjectName("listNameInput")
        self.gridLayout.addWidget(self.listNameInput, 9, 0, 1, 2)
        spacerItem4 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem4, 11, 3, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem5, 12, 3, 1, 1)
        self.completeButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.completeButton.sizePolicy().hasHeightForWidth())
        self.completeButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.completeButton.setFont(font)
        self.completeButton.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                          "border-radius: 10px")
        self.completeButton.setObjectName("completeButton")
        self.gridLayout.addWidget(self.completeButton, 12, 5, 1, 2)
        spacerItem6 = QtWidgets.QSpacerItem(200, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem6, 9, 6, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem7, 9, 2, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem8, 1, 2, 1, 1)
        self.label_caseProp = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_caseProp.setFont(font)
        self.label_caseProp.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                          "border-radius: 8px;")
        self.label_caseProp.setAlignment(QtCore.Qt.AlignCenter)
        self.label_caseProp.setObjectName("label_caseProp")
        self.gridLayout.addWidget(self.label_caseProp, 1, 3, 1, 4)
        self.saveCasePropButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.saveCasePropButton.sizePolicy().hasHeightForWidth())
        self.saveCasePropButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.saveCasePropButton.setFont(font)
        self.saveCasePropButton.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                              "border-radius: 8px;")
        self.saveCasePropButton.setObjectName("saveCasePropButton")
        self.gridLayout.addWidget(self.saveCasePropButton, 3, 3, 1, 4)
        self.label_itemProp = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_itemProp.setFont(font)
        self.label_itemProp.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                          "border-radius: 8px;")
        self.label_itemProp.setAlignment(QtCore.Qt.AlignCenter)
        self.label_itemProp.setObjectName("label_itemProp")
        self.gridLayout.addWidget(self.label_itemProp, 5, 3, 1, 4)
        spacerItem9 = QtWidgets.QSpacerItem(200, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem9, 9, 5, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem10, 6, 1, 1, 1)
        self.itemList = QtWidgets.QListWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.itemList.setFont(font)
        self.itemList.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                    "border-radius: 8px;")
        self.itemList.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.itemList.setObjectName("itemList")
        self.gridLayout.addWidget(self.itemList, 10, 0, 2, 3)
        spacerItem11 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem11, 5, 1, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem12, 4, 1, 1, 1)
        self.itemLengthInput = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemLengthInput.sizePolicy().hasHeightForWidth())
        self.itemLengthInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.itemLengthInput.setFont(font)
        self.itemLengthInput.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                           "border-radius: 8px;")
        self.itemLengthInput.setObjectName("itemLengthInput")
        self.gridLayout.addWidget(self.itemLengthInput, 6, 3, 1, 1)
        self.itemHeigthInput = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemHeigthInput.sizePolicy().hasHeightForWidth())
        self.itemHeigthInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.itemHeigthInput.setFont(font)
        self.itemHeigthInput.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                           "border-radius: 8px;")
        self.itemHeigthInput.setObjectName("itemHeigthInput")
        self.gridLayout.addWidget(self.itemHeigthInput, 6, 5, 1, 1)
        self.itemWidthInput = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemWidthInput.sizePolicy().hasHeightForWidth())
        self.itemWidthInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.itemWidthInput.setFont(font)
        self.itemWidthInput.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                          "border-radius: 8px;")
        self.itemWidthInput.setObjectName("itemWidthInput")
        self.gridLayout.addWidget(self.itemWidthInput, 6, 4, 1, 1)
        self.itemWeightInput = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemWeightInput.sizePolicy().hasHeightForWidth())
        self.itemWeightInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.itemWeightInput.setFont(font)
        self.itemWeightInput.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                           "border-radius: 8px;")
        self.itemWeightInput.setObjectName("itemWeightInput")
        self.gridLayout.addWidget(self.itemWeightInput, 6, 6, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(20, 30, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem13, 8, 0, 1, 1)
        spacerItem14 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem14, 3, 2, 1, 1)
        self.label_item_num = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_item_num.setFont(font)
        self.label_item_num.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                          "border-radius: 8px;")
        self.label_item_num.setAlignment(QtCore.Qt.AlignCenter)
        self.label_item_num.setObjectName("label_item_num")
        self.gridLayout.addWidget(self.label_item_num, 1, 1, 1, 1)
        self.itemInput = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemInput.sizePolicy().hasHeightForWidth())
        self.itemInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.itemInput.setFont(font)
        self.itemInput.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                     "border-radius: 8px;")
        self.itemInput.setObjectName("itemInput")
        self.gridLayout.addWidget(self.itemInput, 2, 0, 1, 1)
        self.item_numInput = QtWidgets.QSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_numInput.sizePolicy().hasHeightForWidth())
        self.item_numInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.item_numInput.setFont(font)
        self.item_numInput.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                         "border-radius: 3px;")
        self.item_numInput.setObjectName("item_numInput")
        self.gridLayout.addWidget(self.item_numInput, 2, 1, 1, 1)
        self.addButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addButton.sizePolicy().hasHeightForWidth())
        self.addButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.addButton.setFont(font)
        self.addButton.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                     "border-radius: 8px;")
        self.addButton.setObjectName("addButton")
        self.gridLayout.addWidget(self.addButton, 3, 0, 1, 2)
        self.verticalLayout.addLayout(self.gridLayout)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.itemNumber = self.itemList.currentItem()

        self.itemNumber = self.itemList.count() - 1
        self.itemWeightList = []
        self.itemVolumeList = []

        self.caseVolume = 0

        self.addButton.pressed.connect(self.addItem)
        self.listRemoveEl.pressed.connect(self.removeItem)
        self.listSaveButton.pressed.connect(self.saveList)
        self.openListButton.pressed.connect(self.open_file_dialog)
        self.saveCasePropButton.pressed.connect(self.saveCaseProp)
        self.completeButton.pressed.connect(self.changeWindow)

        self.electroItems = ['компьютер', 'ноутбук', 'планшет', 'телефон', 'смартфон', 'часы', 'наушники',
                             'электронная книга', 'приставка', 'игровая приставка', 'консоль']
        self.electro = False
        self.fragility = False

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Sobiraem Chemodan"))
        self.openListButton.setText(_translate("MainWindow", "Мои списки"))
        self.listRemoveEl.setText(_translate("MainWindow", "Удалить последний предмет"))
        self.listSaveButton.setText(_translate("MainWindow", "Сохранить список"))
        self.caseLengthInput.setText(_translate("MainWindow", "Длина, в см"))
        self.itemFragilityCheck.setText(_translate("MainWindow", "Хрупкое"))
        self.label_caseMaxWeight.setText(_translate("MainWindow", "Допустимый вес - 10 кг"))
        self.caseWidthInput.setText(_translate("MainWindow", "Ширина, в см"))
        self.caseHeigthInput.setText(_translate("MainWindow", "Высота, в см"))
        self.statusBarVolume.setText(_translate("MainWindow", "Достаточно места"))
        self.statusBarWeight.setText(_translate("MainWindow", "Нет перевеса (0/10 кг)"))
        self.listNameInput.setText(_translate("MainWindow", "Введи название списка..."))
        self.completeButton.setText(_translate("MainWindow", "Собрать чемодан"))
        self.label_caseProp.setText(_translate("MainWindow", "Габариты чемодана"))
        self.saveCasePropButton.setText(_translate("MainWindow", "Сохранить настройки чемодана"))
        self.label_itemProp.setText(_translate("MainWindow", "Свойства вещи"))
        self.itemLengthInput.setText(_translate("MainWindow", "Длина, в см"))
        self.itemHeigthInput.setText(_translate("MainWindow", "Высота, в см"))
        self.itemWidthInput.setText(_translate("MainWindow", "Ширина, в см"))
        self.itemWeightInput.setText(_translate("MainWindow", "Вес вещи, в кг"))
        self.label_item_num.setText(_translate("MainWindow", "Количество"))
        self.itemInput.setText(_translate("MainWindow", "Название"))
        self.addButton.setText(_translate("MainWindow", "Добавить"))

        __sortingEnabled = self.itemList.isSortingEnabled()
        self.itemList.setSortingEnabled(False)
        self.itemList.setSortingEnabled(__sortingEnabled)

    def addItem(self):
        _translate = QtCore.QCoreApplication.translate
        self.itemNumber += 1
        item_str = QtWidgets.QListWidgetItem()
        self.itemList.addItem(item_str)
        item = self.itemList.item(self.itemNumber)
        item.setText(_translate("MainWindow", f"{self.itemNumber + 1}. {self.itemInput.text().title()}, количество: {self.item_numInput.text()}, "
                                              f"размеры: {self.itemLengthInput.text()}x{self.itemWidthInput.text()}x{self.itemHeigthInput.text()}, "
                                              f"вес: {self.itemWeightInput.text()} кг, хрупкое: {'да' if self.itemFragilityCheck.isChecked() else 'нет'}"))
        self.itemWeightList.append(round(int(self.itemWeightInput.text()) * int(self.item_numInput.text())))
        self.itemVolumeList.append(round(int(self.itemLengthInput.text())*int(self.itemWidthInput.text())*int(self.itemHeigthInput.text()) * int(self.item_numInput.text())))

        if sum(self.itemWeightList) > 10:
            self.statusBarWeight.setText(_translate("MainWindow", f'Перевес {sum(self.itemWeightList) - 10} кг'))
            self.statusBarWeight.setStyleSheet("background-color: rgba(243, 243, 243, 200); color: rgb(240, 10, 10); border-radius: 5px;")
        else:
            self.statusBarWeight.setText(_translate("MainWindow", f'Нет перевеса ({sum(self.itemWeightList)}/10 кг)'))
            self.statusBarWeight.setStyleSheet("background-color: rgba(243, 243, 243, 200); border-radius: 5px;")

        if sum(self.itemVolumeList) > self.caseVolume:
            self.statusBarVolume.setText(_translate("MainWindow", f'Недостаточно места'))
            self.statusBarVolume.setStyleSheet("background-color: rgba(243, 243, 243, 200); color: rgb(240, 10, 10); border-radius: 5px;")
        else:
            self.statusBarVolume.setText(_translate("MainWindow", f'Достаточно места'))
            self.statusBarVolume.setStyleSheet("background-color: rgba(243, 243, 243, 200); border-radius: 5px;")

        if self.itemInput.text() in self.electroItems:
            self.electro = True

    def removeItem(self):
        _translate = QtCore.QCoreApplication.translate
        if self.itemNumber < 0:
            pass
        else:
            self.itemList.takeItem(self.itemNumber)
            self.itemNumber -= 1
            self.itemWeightList.remove(self.itemWeightList[-1])
            self.itemVolumeList.remove(self.itemVolumeList[-1])

            if sum(self.itemWeightList) > 10:
                self.statusBarWeight.setText(_translate("MainWindow", f'Перевес {sum(self.itemWeightList) - 10} кг'))
                self.statusBarWeight.setStyleSheet("background-color: rgba(243, 243, 243, 200); color: rgb(240, 10, 10); border-radius: 5px;")
            else:
                self.statusBarWeight.setText(_translate("MainWindow", f'Нет перевеса ({sum(self.itemWeightList)}/10 кг)'))
                self.statusBarWeight.setStyleSheet("background-color: rgba(243, 243, 243, 200); border-radius: 5px;")

            if sum(self.itemVolumeList) > self.caseVolume:
                self.statusBarVolume.setText(_translate("MainWindow", f'Недостаточно места'))
                self.statusBarVolume.setStyleSheet("background-color: rgba(243, 243, 243, 200); color: rgb(240, 10, 10); border-radius: 5px;")
            else:
                self.statusBarVolume.setText(_translate("MainWindow", f'Достаточно места'))
                self.statusBarVolume.setStyleSheet("background-color: rgba(243, 243, 243, 200); border-radius: 5px;")

    def saveList(self):
        file = open(f'{self.listNameInput.text()}.txt', 'w')
        for i in range(self.itemNumber + 1):
            item = self.itemList.item(i)
            file.write(f'{item.text()}\n')
        file.close()

    def open_file_dialog(self):
        _translate = QtCore.QCoreApplication.translate
        fileName = QFileDialog.getOpenFileName()[0]
        name_list = fileName.split('/')
        if fileName:
            self.itemList.clear()
            self.itemWeightList.clear()
            self.itemVolumeList.clear()
            self.listNameInput.setText(name_list[-1][:-4:])
            file = open(f'{fileName}', 'r')
            self.itemList.addItems(file.readlines())
            self.itemNumber = self.itemList.count() - 1
            for i in range(self.itemNumber + 1):
                itemCount = self.itemList.item(i).text().split()
                indCount = itemWeight.index('количество:') + 1
                itemCount = int(itemCount[indCount])

                itemWeight = self.itemList.item(i).text().split()
                indWeight = itemWeight.index('вес:') + 1
                self.itemWeightList.append(round(int(itemWeight[indWeight]) * itemCount))

                itemVolume = self.itemList.item(i).text().split()
                indVolume = itemVolume.index('размеры:') + 1
                itemVolume = itemVolume[indVolume].split('x')

                volume = round(int(itemVolume[0]) * int(itemVolume[1]) * int(itemVolume[2][:-1:]) * itemCount)
                self.itemVolumeList.append(volume)

            if sum(self.itemWeightList) > 10:
                self.statusBarWeight.setText(_translate("MainWindow", f'Перевес {sum(self.itemWeightList) - 10} кг'))
                self.statusBarWeight.setStyleSheet("background-color: rgba(243, 243, 243, 200); color: rgb(240, 10, 10); border-radius: 5px;")
            else:
                self.statusBarWeight.setText(_translate("MainWindow", f'Нет перевеса ({sum(self.itemWeightList)}/10 кг)'))
                self.statusBarWeight.setStyleSheet("background-color: rgba(243, 243, 243, 200); border-radius: 5px;")

            if sum(self.itemVolumeList) > self.caseVolume:
                print(self.caseVolume)
                self.statusBarVolume.setText(_translate("MainWindow", f'Недостаточно места'))
                self.statusBarVolume.setStyleSheet("background-color: rgba(243, 243, 243, 200); color: rgb(240, 10, 10); border-radius: 5px;")
            else:
                self.statusBarVolume.setText(_translate("MainWindow", f'Достаточно места'))
                self.statusBarVolume.setStyleSheet("background-color: rgba(243, 243, 243, 200); border-radius: 5px;")

    def saveCaseProp(self):
        volume = round(int(self.caseLengthInput.text()) * int(self.caseWidthInput.text()) * int(self.caseHeigthInput.text()))
        self.caseVolume = volume

    def changeWindow(self):
        MainWindow.close()
        PackWindow.show()

    """""""""""""""
    PACKING WINDOW
    """""""""""""""

    def PackUi(self, PackWindow):
        PackWindow.setObjectName("PackingWindow")
        PackWindow.resize(957, 739)
        self.centralwidget = QtWidgets.QWidget(PackWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_casePic = QtWidgets.QLabel(self.centralwidget)
        self.label_casePic.setMinimumSize(QtCore.QSize(470, 490))
        self.label_casePic.setMaximumSize(QtCore.QSize(470, 490))
        self.label_casePic.setText("")
        self.label_casePic.setPixmap(QtGui.QPixmap("case.png"))
        self.label_casePic.setScaledContents(True)
        self.label_casePic.setObjectName("label_casePic")
        self.gridLayout_2.addWidget(self.label_casePic, 1, 1, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout_2.addItem(spacerItem1, 0, 1, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.recommenList = QtWidgets.QListWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.recommenList.setFont(font)
        self.recommenList.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                        "border-radius: 8px;")
        self.recommenList.setProperty("isWrapping", False)
        self.recommenList.setResizeMode(QtWidgets.QListView.Fixed)
        self.recommenList.setLayoutMode(QtWidgets.QListView.SinglePass)
        self.recommenList.setWordWrap(True)
        self.recommenList.setObjectName("recommenList")
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(13)
        item.setFont(font)
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("brownPoint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon)
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("yellowPoint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon1)
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("greenPoint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon2)
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("redPoint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon3)
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("purplePoint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon4)
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("grayPoint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon5)
        self.recommenList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.recommenList.addItem(item)
        self.gridLayout.addWidget(self.recommenList, 1, 0, 1, 3)
        self.label_listHead = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_listHead.sizePolicy().hasHeightForWidth())
        self.label_listHead.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_listHead.setFont(font)
        self.label_listHead.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                          "border-radius: 3px;")
        self.label_listHead.setAlignment(QtCore.Qt.AlignCenter)
        self.label_listHead.setObjectName("label_listHead")
        self.gridLayout.addWidget(self.label_listHead, 0, 2, 1, 1)
        self.backButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.backButton.sizePolicy().hasHeightForWidth())
        self.backButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(False)
        font.setWeight(50)
        self.backButton.setFont(font)
        self.backButton.setStyleSheet("background-color: rgba(243, 243, 243, 200);\n"
                                      "border-radius: 3px;")
        self.backButton.setObjectName("backButton")
        self.gridLayout.addWidget(self.backButton, 0, 0, 1, 2)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout_2.addItem(spacerItem2, 2, 1, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem3, 1, 2, 1, 1)
        self.horizontalLayout.addLayout(self.gridLayout_2)
        PackWindow.setCentralWidget(self.centralwidget)

        self.retranslatePackUi(PackWindow)
        QtCore.QMetaObject.connectSlotsByName(PackWindow)

        self.backButton.pressed.connect(self.backWindow)

    def retranslatePackUi(self, PackWindow):
        _translate = QtCore.QCoreApplication.translate
        PackWindow.setWindowTitle(_translate("PackingWindow", "Packing"))
        __sortingEnabled = self.recommenList.isSortingEnabled()
        self.recommenList.setSortingEnabled(False)
        item = self.recommenList.item(0)
        item.setText(_translate("PackWindow", "Цветом выделены оптимальные расположения:"))
        item = self.recommenList.item(1)
        item.setText(_translate("PackWindow", "1. Обувь."))
        item = self.recommenList.item(2)
        item.setText(_translate("PackWindow",
                                "Обувь, брюки, все крупные и неформатные предметы лучше укладывать на дно и по краям чемодана."))
        item = self.recommenList.item(4)
        item.setText(_translate("PackWindow", "2. Одежда, положенная на дно чемодана."))
        item = self.recommenList.item(5)
        item.setText(_translate("PackWindow", "Середину чемодана лучше использовать для пакетов с одеждой полегче."))
        item = self.recommenList.item(7)
        item.setText(_translate("PackWindow", "3. Одежда, свёрнутая в рулон."))
        item = self.recommenList.item(8)
        item.setText(_translate("PackWindow",
                                "Более плотная одежда, которая будет занимать меньше места, если сложить её рулоном, чем положить на дно чемодана."))
        item = self.recommenList.item(10)
        item.setText(_translate("PackWindow", "4. Средства личной гигиены, лекарства."))
        item = self.recommenList.item(11)
        item.setText(_translate("PackWindow",
                                "Третьим слоем уложите легкие и тонкие вещи, туалетные принадлежности, косметичку, лекарства, а также то, что может понадобиться в первую очередь."))
        item = self.recommenList.item(13)
        item.setText(_translate("PackWindow", "5. Хрупкие вещи."))
        item = self.recommenList.item(14)
        item.setText(_translate("PackWindow", "Хрупкие предметылучше всего расположить по центру на мягких вещах."))
        item = self.recommenList.item(16)
        item.setText(_translate("PackWindow", "6. Электронная техника."))
        item = self.recommenList.item(17)
        item.setText(_translate("PackWindow",
                                "Гаджеты лучше перевозить в специальных чехлах. Зарядные устройства для них спрячьте в боковые кармашки или распределите в пустоты, но так, чтобы к ним был свободный доступ."))
        self.recommenList.setSortingEnabled(__sortingEnabled)
        self.label_listHead.setText(_translate("PackWindow", "Рекомендации по сборке багажа"))
        self.backButton.setText(_translate("PackWindow", "Назад"))

    def backWindow(self):
        PackWindow.close()
        MainWindow.show()


stylesheet = """
    QMainWindow {
        background-image: url(background.png); 
        background-repeat: no-repeat; 
        background-position: center;
    }
"""

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    app.setStyleSheet(stylesheet)
    MainWindow = QtWidgets.QMainWindow()
    PackWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    ui.PackUi(PackWindow)
    MainWindow.show()
    sys.exit(app.exec())
